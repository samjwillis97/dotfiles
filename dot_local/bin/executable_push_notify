#!/usr/bin/env bash

set -Eeuo pipefail

usage() {
    cat<<EOF # remove the space between << and EOF, this is due to web plugin issue
Usage: push_notify [-h] title message

Available options:

-h, --help      Print this help and exit
EOF
    exit
}

missing_env_variables() {
    cat<<EOF # remove the space between << and EOF, this is due to web plugin issue
push_notify requires both, \$PUSH_OVER_USER_KEY and \$PUSH_OVER_API_KEY to be set.
EOF
    exit
}

msg() {
    echo >&2 -e "${1-}"
}

die() {
    local msg=$1
    local code=${2-1} # default exit status 1
    msg "$msg"
    exit "$code"
}

setup_colors() {
    if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
        NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
    else
        NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
    fi
}

parse_params() {

    message='Task Complete!'

    while :; do
        case "${1-}" in
            -h | --help) usage ;;
            *) break;;
        esac
        shift
    done

    args=("$@")

    [[ ${#args[@]} -eq 0 ]] && die "Missing script arguments, atleast 1 required"

    title=$1
    if [ "$#" -gt 1 ]; then
        message=$2
    fi

    if [ -z $PUSH_OVER_USER_KEY ]; then
        missing_env_variables
    fi
    if [ -z $PUSH_OVER_API_KEY ]; then
        missing_env_variables
    fi

    return 0
}

parse_params "$@"
setup_colors

curl -s \
    --form-string token="$PUSH_OVER_API_KEY" \
    --form-string user="$PUSH_OVER_USER_KEY" \
    --form-string title="$title" \
    --form-string message="$message" \
    https://api.pushover.net/1/messages.json
